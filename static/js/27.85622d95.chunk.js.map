{"version":3,"file":"static/js/27.85622d95.chunk.js","mappings":"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","sources":["../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/utils/createWebStorage/createWebStorage.js","../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/buildOptions/buildOptions.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/utils/validateParams/validateParams.js","../node_modules/@emailjs/browser/es/utils/isHeadless/isHeadless.js","../node_modules/@emailjs/browser/es/errors/headlessError/headlessError.js","../node_modules/@emailjs/browser/es/utils/isBlockedValueInParams/isBlockedValueInParams.js","../node_modules/@emailjs/browser/es/utils/validateBlockListParams/validateBlockListParams.js","../node_modules/@emailjs/browser/es/errors/blockedEmailError/blockedEmailError.js","../node_modules/@emailjs/browser/es/utils/isLimitRateHit/isLimitRateHit.js","../node_modules/@emailjs/browser/es/utils/validateLimitRateParams/validateLimitRateParams.js","../node_modules/@emailjs/browser/es/errors/limitRateError/limitRateError.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/init/init.js","../node_modules/@emailjs/browser/es/methods/send/send.js","../node_modules/@emailjs/browser/es/utils/validateTemplateParams/validateTemplateParams.js","../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","../node_modules/@emailjs/browser/es/utils/validateForm/validateForm.js","Contact.js"],"sourcesContent":["export class EmailJSResponseStatus {\n    constructor(_status = 0, _text = 'Network Error') {\n        this.status = _status;\n        this.text = _text;\n    }\n}\n","export const createWebStorage = () => {\n    if (typeof localStorage === 'undefined')\n        return;\n    return {\n        get: (key) => Promise.resolve(localStorage.getItem(key)),\n        set: (key, value) => Promise.resolve(localStorage.setItem(key, value)),\n        remove: (key) => Promise.resolve(localStorage.removeItem(key)),\n    };\n};\n","import { createWebStorage } from '../utils/createWebStorage/createWebStorage';\nexport const store = {\n    origin: 'https://api.emailjs.com',\n    blockHeadless: false,\n    storageProvider: createWebStorage(),\n};\n","export const buildOptions = (options) => {\n    if (!options)\n        return {};\n    // support compatibility with SDK v3\n    if (typeof options === 'string') {\n        return {\n            publicKey: options,\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (options.toString() === '[object Object]') {\n        return options;\n    }\n    return {};\n};\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = async (url, data, headers = {}) => {\n    const response = await fetch(store.origin + url, {\n        method: 'POST',\n        headers,\n        body: data,\n    });\n    const message = await response.text();\n    const responseStatus = new EmailJSResponseStatus(response.status, message);\n    if (response.ok) {\n        return responseStatus;\n    }\n    throw responseStatus;\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey || typeof publicKey !== 'string') {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID || typeof serviceID !== 'string') {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID || typeof templateID !== 'string') {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n};\n","export const isHeadless = (navigator) => {\n    return navigator.webdriver || !navigator.languages || navigator.languages.length === 0;\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const headlessError = () => {\n    return new EmailJSResponseStatus(451, 'Unavailable For Headless Browser');\n};\n","import { validateBlockListParams } from '../validateBlockListParams/validateBlockListParams';\nconst isBlockListDisabled = (options) => {\n    return !options.list?.length || !options.watchVariable;\n};\nconst getValue = (data, name) => {\n    return data instanceof FormData ? data.get(name) : data[name];\n};\nexport const isBlockedValueInParams = (options, params) => {\n    if (isBlockListDisabled(options))\n        return false;\n    validateBlockListParams(options.list, options.watchVariable);\n    const value = getValue(params, options.watchVariable);\n    if (typeof value !== 'string')\n        return false;\n    return options.list.includes(value);\n};\n","export const validateBlockListParams = (list, watchVariable) => {\n    if (!Array.isArray(list)) {\n        throw 'The BlockList list has to be an array';\n    }\n    if (typeof watchVariable !== 'string') {\n        throw 'The BlockList watchVariable has to be a string';\n    }\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const blockedEmailError = () => {\n    return new EmailJSResponseStatus(403, 'Forbidden');\n};\n","import { validateLimitRateParams } from '../validateLimitRateParams/validateLimitRateParams';\nconst getLeftTime = async (id, throttle, storage) => {\n    const lastTime = Number((await storage.get(id)) || 0);\n    return throttle - Date.now() + lastTime;\n};\nexport const isLimitRateHit = async (defaultID, options, storage) => {\n    if (!options.throttle || !storage) {\n        return false;\n    }\n    validateLimitRateParams(options.throttle, options.id);\n    const id = options.id || defaultID;\n    const leftTime = await getLeftTime(id, options.throttle, storage);\n    if (leftTime > 0) {\n        return true;\n    }\n    await storage.set(id, Date.now().toString());\n    return false;\n};\n","export const validateLimitRateParams = (throttle, id) => {\n    if (typeof throttle !== 'number' || throttle < 0) {\n        throw 'The LimitRate throttle has to be a positive number';\n    }\n    if (id && typeof id !== 'string') {\n        throw 'The LimitRate ID has to be a string';\n    }\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const limitRateError = () => {\n    return new EmailJSResponseStatus(429, 'Too Many Requests');\n};\n","import { EmailJSResponseStatus } from './models/EmailJSResponseStatus';\nimport { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm, EmailJSResponseStatus };\nexport default {\n    init,\n    send,\n    sendForm,\n    EmailJSResponseStatus,\n};\n","import { store } from '../../store/store';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\n/**\n * EmailJS global SDK config\n * @param {object} options - the EmailJS global SDK config options\n * @param {string} origin - the non-default EmailJS origin\n */\nexport const init = (options, origin = 'https://api.emailjs.com') => {\n    if (!options)\n        return;\n    const opts = buildOptions(options);\n    store.publicKey = opts.publicKey;\n    store.blockHeadless = opts.blockHeadless;\n    store.storageProvider = opts.storageProvider;\n    store.blockList = opts.blockList;\n    store.limitRate = opts.limitRate;\n    store.origin = opts.origin || origin;\n};\n","import { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { validateTemplateParams } from '../../utils/validateTemplateParams/validateTemplateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templateParams - the template params, what will be set to the EmailJS template\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = async (serviceID, templateID, templateParams, options) => {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = store.storageProvider || opts.storageProvider;\n    const blockList = { ...store.blockList, ...opts.blockList };\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\n    if (blockHeadless && isHeadless(navigator)) {\n        return Promise.reject(headlessError());\n    }\n    validateParams(publicKey, serviceID, templateID);\n    validateTemplateParams(templateParams);\n    if (templateParams && isBlockedValueInParams(blockList, templateParams)) {\n        return Promise.reject(blockedEmailError());\n    }\n    if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n        return Promise.reject(limitRateError());\n    }\n    const params = {\n        lib_version: '4.3.3',\n        user_id: publicKey,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templateParams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","export const validateTemplateParams = (templateParams) => {\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (templateParams && templateParams.toString() !== '[object Object]') {\n        throw 'The template params have to be the object. Visit https://www.emailjs.com/docs/sdk/send/';\n    }\n};\n","import { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateForm } from '../../utils/validateForm/validateForm';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\nconst findHTMLForm = (form) => {\n    return typeof form === 'string' ? document.querySelector(form) : form;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = async (serviceID, templateID, form, options) => {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = store.storageProvider || opts.storageProvider;\n    const blockList = { ...store.blockList, ...opts.blockList };\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\n    if (blockHeadless && isHeadless(navigator)) {\n        return Promise.reject(headlessError());\n    }\n    const currentForm = findHTMLForm(form);\n    validateParams(publicKey, serviceID, templateID);\n    validateForm(currentForm);\n    const formData = new FormData(currentForm);\n    if (isBlockedValueInParams(blockList, formData)) {\n        return Promise.reject(blockedEmailError());\n    }\n    if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n        return Promise.reject(limitRateError());\n    }\n    formData.append('lib_version', '4.3.3');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', publicKey);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","export const validateForm = (form) => {\n    if (!form || form.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of the form';\n    }\n};\n","import React, { useRef, useState } from \"react\";\nimport emailjs from \"@emailjs/browser\";\n\nexport default function Contact() {\n  const form = useRef();\n  const [messageSent, setMessageSent] = useState(false);\n\n  const sendEmail = (e) => {\n    e.preventDefault();\n\n    emailjs\n      .sendForm(\"contact_service\", \"contact_form\", form.current, {\n        publicKey: \"6WTU0L3Ur4LEzEGob\",\n      })\n      .then(\n        () => {\n          console.log(\"Success!\");\n          setMessageSent(true);\n          setTimeout(() => setMessageSent(false), 5000);\n        },\n        (error) => {\n          console.log(\"Failed...\", error.text);\n        }\n      );\n\n    e.target.reset();\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 dark:bg-gray-900\">\n      <div className=\"w-full h-40\">\n        <img\n          src={`${process.env.PUBLIC_URL}/pebble-footprint.webp`}\n          alt=\"Banner\"\n          className=\"w-full h-full object-cover\"\n          aria-label=\"Banner Image\"\n        />\n      </div>\n      <section aria-labelledby=\"contact-title\">\n        <div className=\"max-w-screen-md mx-auto p-4 sm:px-6 lg:px-8\">\n          <h2\n            className=\"mb-4 text-3xl tracking-tight font-bold text-center text-gray-900 dark:text-white\"\n            id=\"contact-title\"\n          >\n            Contact Me\n          </h2>\n          <p className=\"mb-8 font-light text-center text-gray-500 dark:text-gray-400 sm:text-xl\">\n            Morning, Afternoon, and Evening Appointments Available\n          </p>\n          {messageSent && (\n            <p\n              className=\"text-center text-rose-600 text-xl font-bold\"\n              aria-live=\"polite\"\n            >\n              Message sent!\n            </p>\n          )}\n          <form\n            className=\"space-y-8\"\n            ref={form}\n            onSubmit={sendEmail}\n            aria-labelledby=\"contact-form\"\n          >\n            <div>\n              <label\n                htmlFor=\"user_name\"\n                className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\"\n              >\n                Your Name\n              </label>\n              <input\n                id=\"user_name\"\n                type=\"text\"\n                name=\"user_name\"\n                className=\"shadow-sm bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-200 dark:border-gray-600 dark:placeholder-gray-400 dark:text-gray-900 dark:focus:ring-primary-500 dark:focus:border-primary-500 dark:shadow-sm-light\"\n                required\n                aria-required=\"true\"\n                aria-describedby=\"user_name-description\"\n              />\n            </div>\n            <div>\n              <label\n                htmlFor=\"user_email\"\n                className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\"\n              >\n                Your Email\n              </label>\n              <input\n                id=\"user_email\"\n                type=\"email\"\n                name=\"user_email\"\n                className=\"shadow-sm bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-200 dark:border-gray-600 dark:placeholder-gray-400 dark:text-gray-900 dark:focus:ring-primary-500 dark:focus:border-primary-500 dark:shadow-sm-light\"\n                required\n                aria-required=\"true\"\n                aria-describedby=\"user_email-description\"\n              />\n            </div>\n            <div>\n              <label\n                htmlFor=\"user_number\"\n                className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\"\n              >\n                Phone Number\n              </label>\n              <input\n                id=\"user_number\"\n                type=\"tel\"\n                name=\"user_number\"\n                className=\"block p-3 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-200 dark:border-gray-600 dark:placeholder-gray-400 dark:text-gray-900 dark:focus:ring-primary-500 dark:focus:border-primary-500 dark:shadow-sm-light\"\n                required\n                aria-required=\"true\"\n                aria-describedby=\"user_number-description\"\n              />\n            </div>\n            <div className=\"sm:col-span-2\">\n              <label\n                htmlFor=\"message\"\n                className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-400\"\n              >\n                Your Message\n              </label>\n              <textarea\n                id=\"message\"\n                name=\"message\"\n                rows=\"6\"\n                className=\"block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg shadow-sm border border-gray-300 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-200 dark:border-gray-600 dark:placeholder-gray-600 dark:text-gray-900 dark:focus:ring-primary-500 dark:focus:border-primary-500\"\n                aria-required=\"true\"\n                aria-describedby=\"message-description\"\n              ></textarea>\n            </div>\n            <button\n              type=\"submit\"\n              value=\"Send\"\n              className=\"block w-full rounded bg-rose-700 px-12 py-3 text-sm font-medium text-white shadow hover:bg-rose-700 focus:outline-none focus:ring active:bg-rose-500 sm:w-auto\"\n              aria-label=\"Send message\"\n            >\n              Send message\n            </button>\n          </form>\n        </div>\n      </section>\n    </div>\n  );\n}\n"],"names":["EmailJSResponseStatus","constructor","_status","arguments","length","undefined","_text","this","status","text","store","origin","blockHeadless","storageProvider","createWebStorage","localStorage","get","key","Promise","resolve","getItem","set","value","setItem","remove","removeItem","buildOptions","options","publicKey","toString","sendPost","async","url","data","headers","response","fetch","method","body","message","responseStatus","ok","validateParams","serviceID","templateID","isHeadless","navigator","webdriver","languages","headlessError","isBlockedValueInParams","params","_options$list","list","watchVariable","isBlockListDisabled","validateBlockListParams","Array","isArray","name","FormData","getValue","includes","blockedEmailError","isLimitRateHit","defaultID","storage","throttle","validateLimitRateParams","id","leftTime","lastTime","Number","Date","now","getLeftTime","limitRateError","init","opts","blockList","limitRate","send","templateParams","_objectSpread","reject","validateTemplateParams","location","pathname","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","sendForm","form","currentForm","document","querySelector","findHTMLForm","nodeName","validateForm","formData","append","Contact","useRef","messageSent","setMessageSent","useState","_jsxs","className","children","_jsx","src","concat","process","alt","ref","onSubmit","e","preventDefault","emailjs","current","then","console","log","setTimeout","error","target","reset","htmlFor","type","required","rows"],"sourceRoot":""}